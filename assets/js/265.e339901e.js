(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{898:function(a,s,e){"use strict";e.r(s);var t=e(6),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"rabbitmq-mirror-queue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-mirror-queue"}},[a._v("#")]),a._v(" RabbitMQ Mirror Queue")]),a._v(" "),e("h2",{attrs:{id:"镜像队列的基本概念与介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像队列的基本概念与介绍"}},[a._v("#")]),a._v(" 镜像队列的基本概念与介绍")]),a._v(" "),e("p",[a._v("队列进程及其内容仅仅维持在单个节点之上，所以一个节点的失效表现为其对应的队列不可用。")]),a._v(" "),e("p",[a._v("引入镜像队列（"),e("code",[a._v("Mirror Queue")]),a._v("）的机制，可以将队列镜像到集群中的其他"),e("code",[a._v("Broker")]),a._v(" 节点之上，每一个镜像队列都包含一个"),e("code",[a._v("master")]),a._v("节点和多个"),e("code",[a._v("slave")]),a._v("节点（主从结构），"),e("strong",[a._v("如果集群中的一个节点失效了，队列能够自动切换到镜像中的另一个节点上以保证服务的可用性。")])]),a._v(" "),e("p",[a._v("结构图如下所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5114528-121cd4bca546fff0.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/280/format/webp",alt:""}})]),a._v(" "),e("p",[e("strong",[a._v("除发送消息（"),e("code",[a._v("Basic.Publish")]),a._v("）外的所有动作都只会向 master 发送，然后再由master 将命令执行的结果广播给各个 slave。")])]),a._v(" "),e("h2",{attrs:{id:"rabbitmq-mirror-queue-搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-mirror-queue-搭建"}},[a._v("#")]),a._v(" Rabbitmq Mirror Queue 搭建")]),a._v(" "),e("p",[a._v("镜像队列的配置主要是通过添加相应的 Policy 来完成 ：")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# rabbitmqctl [--node <node>] [--longnames] [--quiet] set_policy [--vhost <vhost>] [--priority <priority>] [--apply-to <apply-to>] <name> <pattern> <definition>")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("code",[a._v("definition")]),a._v("要包含3个部分"),e("code",[a._v("ha-mode")]),a._v("、"),e("code",[a._v("ha-params")]),a._v("、 "),e("code",[a._v("ha-sync-mode")])]),a._v(" "),e("ul",[e("li",[e("strong",[e("code",[a._v("ha-mode")])]),a._v(" 指明镜像队列的模式，有效值为 all/exactly/nodes默认为 all\n"),e("strong",[a._v("all")]),a._v(" 表示在集群中所有的节点上进行镜像\n"),e("strong",[a._v("exactly")]),a._v(" 表示在指定个数的节点上进行镜像，节点个数由 ha-params 指定;\n"),e("strong",[a._v("nodes")]),a._v(" 表示在指定节点上进行镜像，节点名称通ha-params 指定，节点的名称通常类似于 rabbit@hostname ，可以通过"),e("code",[a._v("rabbitmqctl cluster status")]),a._v("命令查看到")]),a._v(" "),e("li",[e("strong",[e("code",[a._v("ha-params")])]),a._v(" 不同的 hamode 配置中需要用到的参数。")]),a._v(" "),e("li",[e("strong",[e("code",[a._v("ha-sync-mode")])]),a._v(" 队列中消息的同步方式，有效值为 automatic 、manual")])]),a._v(" "),e("p",[e("strong",[a._v("命令样例")])]),a._v(" "),e("ul",[e("li",[e("p",[a._v("对队列名称以"),e("code",[a._v("queue_")]),a._v("开头的所有队列进行镜像，并在集群的两个节点上完 成镜像")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('rabbitmqctl set_policy --priority 0 --apply-to queues mirror_queue "^queue_" \'{"ha-mode ":"exactly","ha-params"：2,"ha-sync-mode":"automatic" }\'\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])]),a._v(" "),e("li",[e("p",[a._v("对队列名称以 "),e("code",[a._v("queue_")]),a._v(" 开头的所有队列进行镜像，并在集群的所有节点上完 成镜像")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('rabbitmqctl set_policy --priority 0 --apply-to queues mirror_queue "^queue_" \'{"ha-mode":"all","ha-sync-mode":"automatic"\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])])]),a._v(" "),e("p",[e("code",[a._v('rabbitmqctl set_policy ha-all "^" \'{"ha-mode":"all"}\'')]),a._v("可以把队列设置为镜像队列")]),a._v(" "),e("p",[e("strong",[a._v("命令执行")])]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("# rabbitmqctl set_policy --priority "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" --apply-to queues mirror_queue "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^queue_"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{"ha-mode":"all","ha-sync-mode":"automatic"\n}\'')]),a._v("\nSetting policy "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mirror_queue"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" pattern "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^queue_"')]),a._v(" to "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{"')]),a._v("ha-mode"),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('":"')]),a._v("all"),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('","')]),a._v("ha-sync-mode"),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('":"')]),a._v("automatic"),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"}"')]),a._v(" with priority "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" vhost "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("在 web 管理接口中创建队列，名称前缀为"),e("code",[a._v("queue")]),a._v("：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://agou-images.oss-cn-qingdao.aliyuncs.com/blog-images/rabbitmq/rabbitmq_mirror_queue.png",alt:""}})]),a._v(" "),e("p",[a._v("在图中看到"),e("code",[a._v("Node--\x3erabbitmq@master")]),a._v("后面有个"),e("code",[a._v("+2")]),a._v("字样，就表示已经同步到"),e("code",[a._v("node01")]),a._v("和"),e("code",[a._v("node02")]),a._v("节点，将鼠标移动至此可以看到提示信息："),e("code",[a._v("Synchronised mirrors: rabbit@node02,rabbit@node01")]),a._v("。")]),a._v(" "),e("p",[e("strong",[a._v("测试"),e("code",[a._v("master")]),a._v(" 节点宕机")])]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在 master 节点上人为停止 rabbitmq 服务")]),a._v("\nsystemctl stop rabbitmq-server\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("此时，打开 web 管理接口，可以看到 "),e("code",[a._v("node02")]),a._v("已经成为主节点，并完成同步：")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://agou-images.oss-cn-qingdao.aliyuncs.com/blog-images/rabbitmq/rabbitmq_mirror_queue-2.png",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("p",[a._v("当 slave 挂掉之后，除了与 slave 相连的客户端连接全部断开，没有其他影响。当 master 挂掉之后，会有以下连锁反应：")]),a._v(" "),e("p",[a._v("（1）与 master 连接的客户端连接全部断开。")]),a._v(" "),e("p",[a._v("（2）选举最老的 slave 作为新的 master，因为最老的 slave 与旧的 master 之间的同步状态应该是最好的。"),e("strong",[a._v("如果此时所有 slave 处于未同步状态，则未同步的消息会丢失。")])]),a._v(" "),e("p",[a._v("（3）新的 master 重新入队所有 unack 的消息，因为新的 slave 无法区分这些 unack 的消息是否己经到达客户端，或者是 ack 信息丢失在老的 master 链路上，再或者是丢失在老的 master 组播 ack 消息到所有slave 的链路上，所以出于消息可靠性的考虑，重新入队所有unack 的消息，"),e("strong",[a._v("不过此时客户端可能会有重复消息")]),a._v("。")]),a._v(" "),e("p",[a._v("（4）如果客户端连接着 slave，并且 Basic.Consume 消费时指定了 "),e("code",[a._v("x-cancel-on-ha-failover")]),a._v(" 参数，那么断开之时客户端会收到一个 Consumer Cancellation Notification 的通知，消费者客户端中会回调 Consumer 接口的 handleCancel 方法。如果未指定 "),e("code",[a._v("x-cancel-on-ha-failover")]),a._v(" 参数，那么消费者将无法感知 master 宕机。")]),a._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),e("ul",[e("li",[a._v("简书@[Dear_diary] ：https://www.jianshu.com/p/fcc35573567c")])])])}),[],!1,null,null,null);s.default=r.exports}}]);
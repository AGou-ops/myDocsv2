(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{764:function(t,s,a){"use strict";a.r(s);var r=a(6),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-事务"}},[t._v("#")]),t._v(" MySQL 事务")]),t._v(" "),a("h2",{attrs:{id:"acid-四特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#acid-四特性"}},[t._v("#")]),t._v(" ACID 四特性")]),t._v(" "),a("ul",[a("li",[t._v("原子性（Atomicity）：一个事务（transaction）中的所有操作，或者全部完成，或者全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%9B%9E%E6%BB%9A_(%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86)",target:"_blank",rel:"noopener noreferrer"}},[t._v("回滚"),a("OutboundLink")],1),t._v("（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。即，事务不可分割、不可约简。["),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/ACID#cite_note-acid-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1]"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%B8%80%E8%87%B4%E6%80%A7_(%E6%95%B0%E6%8D%AE%E5%BA%93)",target:"_blank",rel:"noopener noreferrer"}},[t._v("一致性"),a("OutboundLink")],1),t._v("（Consistency）：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%AE%8C%E6%95%B4%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[t._v("约束"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%A7%A6%E5%8F%91%E5%99%A8_(%E6%95%B0%E6%8D%AE%E5%BA%93)",target:"_blank",rel:"noopener noreferrer"}},[t._v("触发器"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BA%A7%E8%81%94%E5%9B%9E%E6%BB%9A",target:"_blank",rel:"noopener noreferrer"}},[t._v("级联回滚"),a("OutboundLink")],1),t._v("等。["),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/ACID#cite_note-acid-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1]"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%BA%8B%E5%8B%99%E9%9A%94%E9%9B%A2",target:"_blank",rel:"noopener noreferrer"}},[t._v("事务隔离"),a("OutboundLink")],1),t._v("（Isolation）：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括未提交读（Read uncommitted）、提交读（read committed）、可重复读（repeatable read）和串行化（Serializable）。["),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/ACID#cite_note-acid-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1]"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("持久性（Durability）：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。["),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/ACID#cite_note-acid-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1]"),a("OutboundLink")],1)])]),t._v(" "),a("blockquote",[a("p",[t._v("来源：https://zh.wikipedia.org/wiki/ACID")])]),t._v(" "),a("h2",{attrs:{id:"提交和回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交和回滚"}},[t._v("#")]),t._v(" 提交和回滚")]),t._v(" "),a("p",[t._v("MySQL(MariaDB)默认开启自动提交模式，可在命令行中进行查看：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("MariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'autocommit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+-------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Variable_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+-------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" autocommit    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------+-------+")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("在该模式下，如果我们想要开启一个事务，就必须显式开启一个事务：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("MariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在MySQL中，存在一些特殊的命令，如果在事务中执行了这些命令，会马上强制执行commit提交事务；如DDL语句("),a("code",[t._v("create table/drop table/alter/table)、lock tables")]),t._v("语句等等。")]),t._v(" "),a("p",[t._v("不过，常用的"),a("code",[t._v("select")]),t._v("、"),a("code",[t._v("insert")]),t._v("、"),a("code",[t._v("update")]),t._v("和"),a("code",[t._v("delete")]),t._v("命令，都不会强制提交事务。")]),t._v(" "),a("p",[t._v("⚠️"),a("code",[t._v("truncate")]),t._v("语句不支持事务回滚。")]),t._v(" "),a("h3",{attrs:{id:"关闭autocommit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭autocommit"}},[t._v("#")]),t._v(" 关闭autocommit")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 设置不自动提交事务")]),t._v("\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" autocommit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 一系列sql操作。。。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 执行事务操作，提交或者回滚")]),t._v("\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"savepoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#savepoint"}},[t._v("#")]),t._v(" savepoint")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 开启事务。。。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 执行一些sql语句")]),t._v("\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("savepoint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("POINT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 执行另外的一些sql语句。。。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 回滚至保存点")]),t._v("\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("POINT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"只读事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只读事务"}},[t._v("#")]),t._v(" 只读事务")]),t._v(" "),a("p",[t._v("只读事务即指执行的是一些只读操作，如select语句。")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 开启只读事务")]),t._v("\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v(" only"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 企图清空表内容，失败。")]),t._v("\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nYou"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'re about to run a destructive command.\nDo you want to proceed? (y/n): y\nYour call!\n(1792, '")]),t._v("Cannot "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("execute")]),t._v(" statement "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),t._v(" ONLY "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v("'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"锁机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锁机制"}},[t._v("#")]),t._v(" 锁机制")]),t._v(" "),a("p",[t._v("查看"),a("code",[t._v("InnoDB")]),t._v("锁的情况：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("MariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("engine")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("innodb")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),t._v("\\G\nMariaDB root"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@win")]),t._v(":test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" information_schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innodb_locks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+-------------+-----------+-----------+---------------+------------+------------+-----------+----------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_id     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_trx_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_mode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_table    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_space "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_page "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_rec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" lock_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+-------------+-----------+-----------+---------------+------------+------------+-----------+----------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2348")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2348")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" X         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RECORD    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2346")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2346")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" X         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RECORD    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------+-------------+-----------+-----------+---------------+------------+------------+-----------+----------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- `RECORD`表示为行锁，`X`表示写锁（排他锁）")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),a("h3",{attrs:{id:"原子性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原子性"}},[t._v("#")]),t._v(" 原子性")]),t._v(" "),a("blockquote",[a("p",[t._v("实现原子性的关键，是当事务回滚时能够撤销所有已经成功执行的sql语句。"),a("strong",[t._v("InnoDB"),a("strong",[a("strong",[t._v("实现回滚，靠的是undo log")])]),t._v("：当事务对数据库进行修改时，InnoDB"),a("strong",[a("strong",[t._v("会生成对应的undo log")])]),t._v("；如果事务执行失败或调用了rollback")]),t._v("**，导致事务需要回滚，便可以利用undo log****中的信息将数据回滚到修改之前的样子。**")]),t._v(" "),a("p",[t._v("undo log属于逻辑日志，它记录的是sql执行相关的信息。当发生回滚时，InnoDB会根据undo log的内容做与之前相反的工作：对于每个insert，回滚时会执行delete；对于每个delete，回滚时会执行insert；对于每个update，回滚时会执行一个相反的update，把数据改回去。")]),t._v(" "),a("p",[t._v("以update操作为例：当事务执行update时，其生成的undo log中会包含被修改行的主键(以便知道修改了哪些行)、修改了哪些列、这些列在修改前后的值等信息，回滚时便可以使用这些信息将数据还原到update之前的状态。")])]),t._v(" "),a("h3",{attrs:{id:"持久性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久性"}},[t._v("#")]),t._v(" 持久性")]),t._v(" "),a("blockquote",[a("p",[t._v("InnoDB作为MySQL的存储引擎，数据是存放在磁盘中的，但如果每次读写数据都需要磁盘IO，效率会很低。为此，InnoDB提供了缓存(Buffer Pool)，Buffer Pool中包含了磁盘中部分数据页的映射，作为访问数据库的缓冲：当从数据库读取数据时，会首先从Buffer Pool中读取，如果Buffer Pool中没有，则从磁盘读取后放入Buffer Pool；当向数据库写入数据时，会首先写入Buffer Pool，Buffer Pool中修改的数据会定期刷新到磁盘中（这一过程称为刷脏）。")]),t._v(" "),a("p",[t._v("Buffer Pool的使用大大提高了读写数据的效率，但是也带了新的问题：如果MySQL宕机，而此时Buffer Pool中修改的数据还没有刷新到磁盘，就会导致数据的丢失，事务的持久性无法保证。")]),t._v(" "),a("p",[t._v("于是，redo log被引入来解决这个问题：当数据修改时，除了修改Buffer Pool中的数据，还会在redo log记录这次操作；当事务提交时，会调用fsync接口对redo log进行刷盘。如果MySQL宕机，重启时可以读取redo log中的数据，对数据库进行恢复。redo log采用的是WAL（Write-ahead logging，预写式日志），所有修改先写入日志，再更新到Buffer Pool，保证了数据不会因MySQL宕机而丢失，从而满足了持久性要求。")]),t._v(" "),a("p",[t._v("既然redo log也需要在事务提交时将日志写入磁盘，为什么它比直接将Buffer Pool中修改的数据写入磁盘(即刷脏)要快呢？主要有以下两方面的原因：")]),t._v(" "),a("p",[t._v("（1）刷脏是随机IO，因为每次修改的数据位置随机，但写redo log是追加操作，属于顺序IO。")]),t._v(" "),a("p",[t._v("（2）刷脏是以数据页（Page）为单位的，MySQL默认页大小是16KB，一个Page上一个小修改都要整页写入；而redo log中只包含真正需要写入的部分，无效IO大大减少。")]),t._v(" "),a("p",[t._v("ℹ️ "),a("strong",[t._v("redo log与binlog")])]),t._v(" "),a("p",[t._v("我们知道，在MySQL中还存在binlog(二进制日志)也可以记录写操作并用于数据的恢复，但二者是有着根本的不同的：")]),t._v(" "),a("p",[t._v("（1）作用不同：redo log是用于crash recovery的，保证MySQL宕机也不会影响持久性；binlog是用于point-in-time recovery的，保证服务器可以基于时间点恢复数据，此外binlog还用于主从复制。")]),t._v(" "),a("p",[t._v("（2）层次不同：redo log是InnoDB存储引擎实现的，而binlog是MySQL的服务器层(可以参考文章前面对MySQL逻辑架构的介绍)实现的，同时支持InnoDB和其他存储引擎。")]),t._v(" "),a("p",[t._v("（3）内容不同：redo log是物理日志，内容基于磁盘的Page；binlog的内容是二进制的，根据binlog_format参数的不同，可能基于sql语句、基于数据本身或者二者的混合。")]),t._v(" "),a("p",[t._v("（4）写入时机不同：binlog在事务提交时写入；redo log的写入时机相对多元：")]),t._v(" "),a("ul",[a("li",[t._v("前面曾提到：当事务提交时会调用fsync对redo log进行刷盘；这是默认情况下的策略，修改innodb_flush_log_at_trx_commit参数可以改变该策略，但事务的持久性将无法保证。")]),t._v(" "),a("li",[t._v("除了事务提交时，还有其他刷盘时机：如master thread每秒刷盘一次redo log等，这样的好处是不一定要等到commit时刷盘，commit速度大大加快。")])])]),t._v(" "),a("h3",{attrs:{id:"隔离性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隔离性"}},[t._v("#")]),t._v(" 隔离性")]),t._v(" "),a("blockquote",[a("p",[t._v("**与原子性、持久性侧重于研究事务本身不同，隔离性研究的是不同事务之间的相互影响。**隔离性是指，事务内部的操作与其他事务是隔离的，并发执行的各个事务之间不能互相干扰。严格的隔离性，对应了事务隔离级别中的Serializable (可串行化)，但实际应用中出于性能方面的考虑很少会使用可串行化。")]),t._v(" "),a("p",[t._v("隔离性追求的是并发情形下事务之间互不干扰。简单起见，我们主要考虑最简单的读操作和写操作(加锁读等特殊读操作会特殊说明)，那么隔离性的探讨，主要可以分为两个方面：")]),t._v(" "),a("ul",[a("li",[t._v("(一个事务)写操作对(另一个事务)写操作的影响：锁机制保证隔离性")]),t._v(" "),a("li",[t._v("(一个事务)写操作对(另一个事务)读操作的影响：MVCC保证隔离性")])]),t._v(" "),a("p",[a("strong",[t._v("锁机制的基本原理可以概括为：事务在修改数据之前，需要先获得相应的锁；获得锁之后，事务便可以修改数据；该事务操作期间，这部分数据是锁定的，其他事务如果需要修改数据，需要等待当前事务提交或回滚后释放锁。")])])]),t._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("ul",[a("li",[t._v("深入学习MySQL事务：https://www.cnblogs.com/kismetv/p/10331633.html")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
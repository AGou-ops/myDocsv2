(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{782:function(s,t,n){"use strict";n.r(t);var a=n(6),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"docker-network"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-network"}},[s._v("#")]),s._v(" Docker Network")]),s._v(" "),n("h2",{attrs:{id:"docker-虚拟化网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-虚拟化网络"}},[s._v("#")]),s._v(" Docker 虚拟化网络")]),s._v(" "),n("h3",{attrs:{id:"一、docker网络介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、docker网络介绍"}},[s._v("#")]),s._v(" 一、docker网络介绍")]),s._v(" "),n("p",[s._v("在开始的博客中就有提过，现在的linux内核已经支持六种名称空间：user、uts，mount，ipc，pid，net，而net主要就是用于网络设备、协议栈的隔离。inux内核支持二层和三层设备的模拟，宿主机的docker0就是用软件来实现的具有交换功能的虚拟二层设备，docker中的网卡设备是成对出现的，好比网线的两头，一头处于docker中，另外一头在docker0桥上，这个使用brctl工具就能实现。所以")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker1 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" docker0\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": docker0: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("NO-CARRIER,BROADCAST,MULTICAST,UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue state DOWN \n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.1/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".255.255 scope global docker0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("下面我们使用ip命令操作网络名称空间，简单模拟容器间的网络通信（当我们使用ip命令去管理网络名称空间的时候，只有网络名称空间是被隔离的，其它名称空间都是共享的。），这里使用一台没有安装docker的主机，避免混淆。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 首先确定系统中是否有iproute的包，ip命令就包含在这个包中\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qa iproute\niproute-3.10.0-87.el7.x86_64\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 添加网络名称空间\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" ns1\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" ns2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nns2\nns1\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 如果我们没有单独给这两个名称空间创建网卡的话，默认是只有一个lo的。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ns1 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noop state DOWN qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ns2 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noop state DOWN qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 创建网卡对\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" name veth1.1 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" veth peer name veth1.2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" show\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue state UNKNOWN mode DEFAULT qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": ens33: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc pfifo_fast state UP mode DEFAULT qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 00:0c:29:c4:4a:ca brd ff:ff:ff:ff:ff:ff\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": veth1.2@veth1.1: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noop state DOWN mode DEFAULT qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 5e:b2:bb:e4:bc:a7 brd ff:ff:ff:ff:ff:ff\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(": veth1.1@veth1.2: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noop state DOWN mode DEFAULT qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 06:5f:16:be:a1:56 brd ff:ff:ff:ff:ff:ff\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 可以看到veth1.1的另一半是veth1.2，veth1.2的另一半是veth1.1，此时这两块网卡存在于我们的物理机上，但是处于未激活状态，现在我们把veth1.2放到ns1名称空间中\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth1.2 netns ns1\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 一个虚拟网卡只能属于一个网络名称空间，所以在物理机上只剩veth1.1了。而ns1网络名称空间中已经多了一个veth1.2。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" show\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue state UNKNOWN mode DEFAULT qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": ens33: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc pfifo_fast state UP mode DEFAULT qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 00:0c:29:c4:4a:ca brd ff:ff:ff:ff:ff:ff\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(": veth1.1@if3: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noop state DOWN mode DEFAULT qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 06:5f:16:be:a1:56 brd ff:ff:ff:ff:ff:ff link-netnsid "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ns1 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a \n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noop state DOWN qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": veth1.2@if4: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noop state DOWN qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 5e:b2:bb:e4:bc:a7 brd ff:ff:ff:ff:ff:ff link-netnsid "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 当然，也可以给网卡改名字，这里为了方便查看就不修改了。命令如下：\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ns1 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth1.2 name eth0\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 配置地址并激活网卡使宿主机能与ns1通信\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v(" veth1.1 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1/24 up\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ns1 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v(" veth1.2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2/24 up\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2\nPING "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bytes of data.\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2: "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.047")]),s._v(" ms\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 接下来我们再把veth1.1放到ns2为网络名称空间中，并实现ns1和ns2的通信\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev veth1.1 netns ns2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ns2 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v(" veth1.1 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.3/24 up\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker3 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" netns "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ns2 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2\nPING "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bytes of data.\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.2: "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.027")]),s._v(" ms\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br")])]),n("h3",{attrs:{id:"二、docker网络类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、docker网络类型"}},[s._v("#")]),s._v(" 二、docker网络类型")]),s._v(" "),n("p",[s._v("docker支持五种网络类型，但是安装后只默认提供三种，如下：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" info "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -w Network\nWARNING: bridge-nf-call-iptables is disabled\nWARNING: bridge-nf-call-ip6tables is disabled\n Network: bridge "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" macvlan null overlay\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 两条命令解除上面的警告信息\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bridge-nf-call-iptables = 1\\nbridge-nf-call-ip6tables = 1'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("/etc/sysctl.conf \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 安装docker后，默认提供的三种网络类型\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nNETWORK ID          NAME                DRIVER              SCOPE\n4784b8e4f640        bridge              bridge              "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\nf5a426943455        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n61be1051e1fe        none                null                "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# bridge是默认的网络类型\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network inspect bridge "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" bridge.name\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.docker.network.bridge.name"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker0"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"三、docker容器类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、docker容器类型"}},[s._v("#")]),s._v(" 三、docker容器类型")]),s._v(" "),n("p",[s._v("docker的网络类型和容器模型是相关联的，所以就都放在下面说吧。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://img2018.cnblogs.com/blog/1419513/201906/1419513-20190613161543999-1823209267.png",alt:"img"}})]),s._v(" "),n("ul",[n("li",[s._v("封闭式容器\n  使用名称空间，但是不创建网路设备，只有一个lo接口。实现如下：")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name busy01 -it --network none --rm busybox\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("ul",[n("li",[s._v("桥接式容器\n  默认的容器类型，故可以省去network的参数。创建网络设备时，一半在容器内部，一半在宿主机的docker0上。实现如下：")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name busy01 -it --network bridge --rm busybox\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(": eth0@if5: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue \n    link/ether 02:42:0a:00:00:02 brd ff:ff:ff:ff:ff:ff\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.2/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("联盟式容器")]),s._v("\n  创建一个容器加入另一个容器，共享"),n("code",[s._v("net")]),s._v("、"),n("code",[s._v("uts")]),s._v("、"),n("code",[s._v("ipc")]),s._v("名称空间，独享其它名称空间。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name busy01 -it --rm busybox\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(": eth0@if9: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue \n    link/ether 02:42:0a:00:00:03 brd ff:ff:ff:ff:ff:ff\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.3/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" \n4a5449c67f3a\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 此时另开一窗口，在启动另外一个容器，可以看到ip和主机名啥的都是一样的\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name busy02 -it --network container:busy01 --rm busybox\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(": eth0@if9: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue \n    link/ether 02:42:0a:00:00:03 brd ff:ff:ff:ff:ff:ff\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.3/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" \n4a5449c67f3a\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 做个测试，证明两个容器时共用lo接口的，在busy01上面启动一个httpd\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'I am very happy'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/tmp/test/index.html\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# httpd -f -h /tmp/test/\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 在busy02上访问本地接口lo，可以看到是成功的\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -O - -q "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1\nI am very happy\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 但是文件系统还是隔离的，在busy01容器中创建一个目录\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /tmp/test\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 在busy02中查看，是木得的\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /tmp/\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("ul",[n("li",[s._v("开放式容器\n  开放式容器时联盟是容器的一个延伸，这种类型的容器直接共享宿主机的网络名称空间。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name busy01 -it --network "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" --rm busybox\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" \n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": ens33: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc pfifo_fast qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 00:0c:29:90:c4:6e brd ff:ff:ff:ff:ff:ff\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.12/24 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.255 scope global ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::20c:29ff:fe90:c46e/64 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" \n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": docker0: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue \n    link/ether 02:42:6a:2a:e2:bb brd ff:ff:ff:ff:ff:ff\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.1/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:6aff:fe2a:e2bb/64 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" \n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(": veth340cf79@if6: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue master docker0 \n    link/ether 0a:29:9a:4d:3b:da brd ff:ff:ff:ff:ff:ff\n    inet6 fe80::829:9aff:fe4d:3bda/64 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" \n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 可以看到直接使用物理机的网络设备，此时我们启动一个httpd。\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'good good study'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/tmp/index.html\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# httpd -h /tmp/\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -lntp\nActive Internet connections "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("only servers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:22              "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:*               LISTEN      -\ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" :::80                   :::*                    LISTEN      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("/httpd\ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" :::22                   :::*                    LISTEN      -\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 这其实是直接监听在物理机网卡地址的80端口，我们可以在浏览器做访问测试\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[n("img",{attrs:{src:"https://img2018.cnblogs.com/blog/1419513/201906/1419513-20190619170253139-457341143.png",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"四、docker网络实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、docker网络实践"}},[s._v("#")]),s._v(" 四、docker网络实践")]),s._v(" "),n("ul",[n("li",[s._v("修改docker0桥的地址，添加bip设置")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" docker0\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": docker0: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue state UP \n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),s._v(".0.1/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".255.255 scope global docker0\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# docker0桥默认地址是172.17.网段的，现在我修改为172.16网络的。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/docker/daemon.json\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://p4y8tfz4.mirror.aliyuncs.com"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bip"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"172.16.0.1/16"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# systemctl restart docker.service \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" docker0\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": docker0: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("NO-CARRIER,BROADCAST,MULTICAST,UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue state DOWN \n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".0.1/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".255.255 scope global docker0\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 当然也可以指定dns和default-gateway，格式与bip一样的。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("ul",[n("li",[s._v("远程管理docker容器，"),n("a",{attrs:{href:"https://docs.docker.com/install/linux/linux-postinstall/#control-where-the-docker-daemon-listens-for-connections",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),n("OutboundLink")],1),s._v("有两种方法，我只实现了一种。。。。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 现在我的docker1和docker2主机都是有安装docker的，我现在修改配置，使docker1能够控制docker2的容器\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS               NAMES\n2157de82161a        hamerle/httpd:v1    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/httpd -f -h /d…"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" days ago          Exited "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("137")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago                       web007\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# systemctl edit docker.service\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# systemctl daemon-reload \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# systemctl restart docker.service \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -lntp\nActive Internet connections "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("only servers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:22              "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:*               LISTEN      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("765")]),s._v("/sshd            \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:2375          "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:*               LISTEN      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5180")]),s._v("/dockerd        \ntcp6       "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" :::22                   :::*                    LISTEN      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("765")]),s._v("/sshd \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# docke daemon已经监听到2375的端口，我们现在可以通过docker1远程启动docker2上的web007容器\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker1 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" -H "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.12:2375 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS               NAMES\n2157de82161a        hamerle/httpd:v1    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/httpd -f -h /d…"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" days ago          Exited "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("137")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" hours ago                       web007\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker1 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" -H "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.12:2375 start web007 \nweb007\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\n2157de82161a        hamerle/httpd:v1    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/httpd -f -h /d…"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" days ago          Up "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("58")]),s._v(" seconds                           web007\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("ul",[n("li",[s._v("手动创建一个网络类型，并指定对应网桥设备的名称为docker1，完整的参数可以参考"),n("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/network_create/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),n("OutboundLink")],1),s._v("，最终实现基于两个不同网络启动的容器间互相通信。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nNETWORK ID          NAME                DRIVER              SCOPE\n56e76e104239        bridge              bridge              "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\naf5460d6727a        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n2305ac12c2f1        none                null                "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create --help\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create -o com.docker.network.bridge.name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("docker1 -d bridge --subnet "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'172.18.0.0/16'")]),s._v(" bridge-test\n32cc657f5b673d989a00555f9f9e5c37d470a5ba4e9b5f24918d163ae364e82e\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# -o：在使用bridge的driver类型时，可以使用-o的附加参数。上面实例中的参数意思是指定创建bridge类型网络时对应虚拟网桥设备的名字。（就是ip a命令看到的名字）\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# -d：指定driver，默认类型就是bridge。\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# --subnet：指定新建的docker网络的网段\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 最后的bridg-test是即将要将创建出的网络的名字.\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" \nNETWORK ID          NAME                DRIVER              SCOPE\n56e76e104239        bridge              bridge              "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n32cc657f5b67        bridge-test         bridge              "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\naf5460d6727a        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n2305ac12c2f1        none                null                "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" docker1\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(": docker1: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("NO-CARRIER,BROADCAST,MULTICAST,UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue state DOWN \n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.1/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".255.255 scope global docker1\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 我们以bridge-test网络启动一个容器\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name busy01 -it --network bridge-test --rm busybox\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a \n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(": eth0@if21: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue \n    link/ether 02:42:ac:10:00:02 brd ff:ff:ff:ff:ff:ff\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.2/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 另开一个窗口，使用bridge网络再起一个容器\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name busy02 -it --network bridge --rm busybox\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" a\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue qlen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(": eth0@if23: "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc noqueue \n    link/ether 02:42:0a:00:00:03 brd ff:ff:ff:ff:ff:ff\n    inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".0.2/16 brd "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 可以看到两个容器，一个是172.18网段，一个是172.16网段，此时做连通性测试。\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.2\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 不通，此时确定宿主机的ip_forward是否开启，如果开启还不通，则需要另开一个窗口排查防火墙规则。\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/sys/net/ipv4/ip_forward\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# iptables -nvL\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 排查防火墙规则，其实很简单，把target类型为DROP的删掉就好了。我这只列出有DROP的链，并删除\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# iptables -nvL DOCKER-ISOLATION-STAGE-2 --line-number \nChain DOCKER-ISOLATION-STAGE-2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" references"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nnum   pkts bytes target     prot opt "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("     out     "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("               destination         \n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1848")]),s._v(" DROP       all  --  *      docker1  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0/0            "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0/0           \n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" DROP       all  --  *      docker0  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0/0            "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0/0           \n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" RETURN     all  --  *      *       "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0/0            "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0/0 \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# iptables -D DOCKER-ISOLATION-STAGE-2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@docker2 ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# iptables -D DOCKER-ISOLATION-STAGE-2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# 删除完后再ping\n/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.2\nPING "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.2 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),s._v(" data bytes\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.2: "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("seq")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("63")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.262")]),s._v(" ms\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),s._v(".0.2: "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("seq")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("63")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.082")]),s._v(" ms\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br")])]),n("blockquote",[n("p",[s._v("转载自：https://www.cnblogs.com/ccbloom/p/10997452.html")])])])}),[],!1,null,null,null);t.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{969:function(e,s,t){"use strict";t.r(s);var a=t(6),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"k3s-k3d-basic"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k3s-k3d-basic"}},[e._v("#")]),e._v(" k3s & k3d Basic")]),e._v(" "),t("h2",{attrs:{id:"k3s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k3s"}},[e._v("#")]),e._v(" k3s")]),e._v(" "),t("p",[t("strong",[e._v("Lightweight Kubernetes")])]),e._v(" "),t("p",[e._v("官方站点：https://k3s.io")]),e._v(" "),t("p",[e._v("官方仓库：https://github.com/rancher/k3s")]),e._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),t("p",[e._v("将"),t("code",[e._v("k3s")]),e._v("安装成为服务：")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -sfL https://get.k3s.io "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 添加worker节点")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -sfL https://get.k3s.io "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("K3S_URL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://k3s-server:6443 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("K3S_TOKEN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" k3s-server  "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /var/lib/rancher/k3s/server/node-token"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v(" -\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("A kubeconfig file is written to "),t("code",[e._v("/etc/rancher/k3s/k3s.yaml")]),e._v(".")]),e._v(" "),t("p",[e._v("手动安装使用"),t("code",[e._v("k3s")]),e._v("：")]),e._v(" "),t("ol",[t("li",[e._v("Download "),t("code",[e._v("k3s")]),e._v(" from latest "),t("a",{attrs:{href:"https://github.com/rancher/k3s/releases/latest",target:"_blank",rel:"noopener noreferrer"}},[e._v("release"),t("OutboundLink")],1),e._v(", x86_64, armhf, and arm64 are supported.")]),e._v(" "),t("li",[e._v("Run server.")])]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" k3s server "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Kubeconfig is written to /etc/rancher/k3s/k3s.yaml")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" k3s kubectl get nodes\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# On a different node run the below. NODE_TOKEN comes from")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# /var/lib/rancher/k3s/server/node-token on your server")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" k3s agent --server https://myserver:6443 --token "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${NODE_TOKEN}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h2",{attrs:{id:"k3d-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k3d-简介"}},[e._v("#")]),e._v(" k3d 简介")]),e._v(" "),t("blockquote",[t("p",[e._v("k3d is a lightweight wrapper to run k3s (Rancher Lab’s minimal Kubernetes distribution) in docker.\nk3d makes it very easy to create single- and multi-node k3s clusters in docker, e.g. for local development on Kubernetes.")])]),e._v(" "),t("p",[e._v("官方站点: https://k3d.io")]),e._v(" "),t("h2",{attrs:{id:"安装-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),t("h3",{attrs:{id:"linux系统下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux系统下"}},[e._v("#")]),e._v(" linux系统下")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# use the install script to grab the latest release:")]),e._v("\nwget: "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("wget")]),e._v(" -q -O - https://raw.githubusercontent.com/rancher/k3d/main/install.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 或者")]),e._v("\ncurl: "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v("\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h3",{attrs:{id:"windows系统下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows系统下"}},[e._v("#")]),e._v(" Windows系统下")]),e._v(" "),t("p",[e._v("从"),t("a",{attrs:{href:"https://github.com/rancher/k3d/releases/tag/v3.1.3",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方仓库"),t("OutboundLink")],1),e._v("中下载对应的包, 配置好环境变量即可.")]),e._v(" "),t("h2",{attrs:{id:"集群部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群部署"}},[e._v("#")]),e._v(" 集群部署")]),e._v(" "),t("p",[e._v("单节点部署:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("k3d cluster create mycluster\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("多节点部署:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("k3d cluster create multiserver --servers "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 向已存在的集群中添加节点")]),e._v("\nk3d "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("node")]),e._v(" create newserver --cluster multiserver --role server\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 部署两个agent节点")]),e._v("\nk3d cluster create --api-port "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6550")]),e._v(" -p "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"8081:80@loadbalancer"')]),e._v(" --agents "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"输出kubeconfig信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出kubeconfig信息"}},[e._v("#")]),e._v(" 输出kubeconfig信息")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("k3d kubeconfig "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("write")]),e._v(" k3s-default\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"暴露服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#暴露服务"}},[e._v("#")]),e._v(" 暴露服务")]),e._v(" "),t("blockquote",[t("h2",{attrs:{id:"_1-via-ingress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-via-ingress"}},[e._v("#")]),e._v(" 1. via Ingress")]),e._v(" "),t("p",[e._v("In this example, we will deploy a simple nginx webserver deployment and make it accessible via ingress. Therefore, we have to create the cluster in a way, that the internal port 80 (where the "),t("code",[e._v("traefik")]),e._v(" ingress controller is listening on) is exposed on the host system.")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Create a cluster, mapping the ingress port 80 to localhost:8081")]),e._v(" "),t("p",[t("code",[e._v('k3d cluster create --api-port 6550 -p "8081:80@loadbalancer" --agents 2')])]),e._v(" "),t("p",[e._v("Good to know")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("--api-port 6550")]),e._v(" is not required for the example to work. It’s used to have "),t("code",[e._v("k3s")]),e._v("‘s API-Server listening on port 6550 with that port mapped to the host system.")]),e._v(" "),t("li",[e._v("the port-mapping construct"),t("code",[e._v("8081:80@loadbalancer")]),e._v("means\n"),t("ul",[t("li",[e._v("map port "),t("code",[e._v("8081")]),e._v(" from the host to port "),t("code",[e._v("80")]),e._v(" on the container which matches the nodefilter "),t("code",[e._v("loadbalancer")])])])]),e._v(" "),t("li",[e._v("the"),t("code",[e._v("loadbalancer")]),e._v("nodefilter matches only the"),t("code",[e._v("serverlb")]),e._v(" that’s deployed in front of a cluster’s server nodes\n"),t("ul",[t("li",[e._v("all ports exposed on the "),t("code",[e._v("serverlb")]),e._v(" will be proxied to the same ports on all server nodes in the cluster")])])])])]),e._v(" "),t("li",[t("p",[e._v("Get the kubeconfig file")]),e._v(" "),t("p",[t("code",[e._v('export KUBECONFIG="$(k3d kubeconfig write k3s-default)"')])])]),e._v(" "),t("li",[t("p",[e._v("Create a nginx deployment")]),e._v(" "),t("p",[t("code",[e._v("kubectl create deployment nginx --image=nginx")])])]),e._v(" "),t("li",[t("p",[e._v("Create a ClusterIP service for it")]),e._v(" "),t("p",[t("code",[e._v("kubectl create service clusterip nginx --tcp=80:80")])])]),e._v(" "),t("li",[t("p",[e._v("Create an ingress object for it with "),t("code",[e._v("kubectl apply -f")]),e._v(" "),t("em",[e._v("Note")]),e._v(": "),t("code",[e._v("k3s")]),e._v(" deploys "),t("a",{attrs:{href:"https://github.com/containous/traefik",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("traefik")]),t("OutboundLink")],1),e._v(" as the default ingress controller")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: nginx\n  annotations:\n    ingress.kubernetes.io/ssl-redirect: "false"\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /\n        backend:\n          serviceName: nginx\n          servicePort: 80\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("Curl it via localhost")]),e._v(" "),t("p",[t("code",[e._v("curl localhost:8081/")])])])]),e._v(" "),t("h2",{attrs:{id:"_2-via-nodeport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-via-nodeport"}},[e._v("#")]),e._v(" 2. via NodePort")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Create a cluster, mapping the port 30080 from agent-0 to localhost:8082")]),e._v(" "),t("p",[t("code",[e._v('k3d cluster create mycluster -p "8082:30080@agent[0]" --agents 2')])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Note")]),e._v(": Kubernetes’ default NodePort range is "),t("a",{attrs:{href:"https://kubernetes.io/docs/concepts/services-networking/service/#nodeport",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("30000-32767")]),t("OutboundLink")],1)]),e._v(" "),t("li",[t("strong",[e._v("Note")]),e._v(": You may as well expose the whole NodePort range from the very beginning, e.g. via "),t("code",[e._v('k3d cluster create mycluster --agents 3 -p "30000-32767:30000-32767@server[0]"')]),e._v(" (See "),t("a",{attrs:{href:"https://www.youtube.com/watch?v=5HaU6338lAk",target:"_blank",rel:"noopener noreferrer"}},[e._v("this video from @portainer"),t("OutboundLink")],1),e._v(")")])])])]),e._v(" "),t("p",[e._v("… (Steps 2 and 3 like above) …")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Create a NodePort service for it with "),t("code",[e._v("kubectl apply -f")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  ports:\n  - name: 80-80\n    nodePort: 30080\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: NodePort\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("Curl it via localhost")]),e._v(" "),t("p",[t("code",[e._v("curl localhost:8082/")])])])])]),e._v(" "),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[e._v("#")]),e._v(" 参考链接")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("k3d官方github仓库: https://github.com/rancher/k3d")])]),e._v(" "),t("li",[t("p",[e._v("k3d Documentation: https://k3d.io/")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);
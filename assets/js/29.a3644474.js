(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{663:function(e,t,r){"use strict";r.r(t);var a=r(6),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"golang-目录结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#golang-目录结构"}},[e._v("#")]),e._v(" Golang 目录结构")]),e._v(" "),r("blockquote",[r("p",[e._v("原文：https://github.com/golang-standards/project-layout/blob/master/README_zh.md")])]),e._v(" "),r("h3",{attrs:{id:"cmd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[e._v("#")]),e._v(" "),r("code",[e._v("/cmd")])]),e._v(" "),r("p",[e._v("本项目的主干。")]),e._v(" "),r("p",[e._v("每个应用程序的目录名应该与你想要的可执行文件的名称相匹配(例如，"),r("code",[e._v("/cmd/myapp")]),e._v(")。")]),e._v(" "),r("p",[e._v("不要在这个目录中放置太多代码。如果你认为代码可以导入并在其他项目中使用，那么它应该位于 "),r("code",[e._v("/pkg")]),e._v(" 目录中。如果代码不是可重用的，或者你不希望其他人重用它，请将该代码放到 "),r("code",[e._v("/internal")]),e._v(" 目录中。你会惊讶于别人会怎么做，所以要明确你的意图!")]),e._v(" "),r("p",[e._v("通常有一个小的 "),r("code",[e._v("main")]),e._v(" 函数，从 "),r("code",[e._v("/internal")]),e._v(" 和 "),r("code",[e._v("/pkg")]),e._v(" 目录导入和调用代码，除此之外没有别的东西。")]),e._v(" "),r("p",[e._v("有关示例，请参阅 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/cmd/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/cmd")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h3",{attrs:{id:"internal"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#internal"}},[e._v("#")]),e._v(" "),r("code",[e._v("/internal")])]),e._v(" "),r("p",[e._v("私有应用程序和库代码。这是你不希望其他人在其应用程序或库中导入代码。请注意，这个布局模式是由 Go 编译器本身执行的。有关更多细节，请参阅Go 1.4 "),r("a",{attrs:{href:"https://golang.org/doc/go1.4#internalpackages",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("release notes")]),r("OutboundLink")],1),e._v(" 。注意，你并不局限于顶级 "),r("code",[e._v("internal")]),e._v(" 目录。在项目树的任何级别上都可以有多个内部目录。")]),e._v(" "),r("p",[e._v("你可以选择向 internal 包中添加一些额外的结构，以分隔共享和非共享的内部代码。这不是必需的(特别是对于较小的项目)，但是最好有有可视化的线索来显示预期的包的用途。你的实际应用程序代码可以放在 "),r("code",[e._v("/internal/app")]),e._v(" 目录下(例如 "),r("code",[e._v("/internal/app/myapp")]),e._v(")，这些应用程序共享的代码可以放在 "),r("code",[e._v("/internal/pkg")]),e._v(" 目录下(例如 "),r("code",[e._v("/internal/pkg/myprivlib")]),e._v(")。")]),e._v(" "),r("h3",{attrs:{id:"pkg"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pkg"}},[e._v("#")]),e._v(" "),r("code",[e._v("/pkg")])]),e._v(" "),r("p",[e._v("外部应用程序可以使用的库代码(例如 "),r("code",[e._v("/pkg/mypubliclib")]),e._v(")。其他项目会导入这些库，希望它们能正常工作，所以在这里放东西之前要三思:-)注意，"),r("code",[e._v("internal")]),e._v(" 目录是确保私有包不可导入的更好方法，因为它是由 Go 强制执行的。"),r("code",[e._v("/pkg")]),e._v(" 目录仍然是一种很好的方式，可以显式地表示该目录中的代码对于其他人来说是安全使用的好方法。由 Travis Jeffery 撰写的 "),r("a",{attrs:{href:"https://travisjeffery.com/b/2019/11/i-ll-take-pkg-over-internal/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("I'll take pkg over internal")]),r("OutboundLink")],1),e._v(" 博客文章提供了 "),r("code",[e._v("pkg")]),e._v(" 和 "),r("code",[e._v("internal")]),e._v(" 目录的一个很好的概述，以及什么时候使用它们是有意义的。")]),e._v(" "),r("p",[e._v("当根目录包含大量非 Go 组件和目录时，这也是一种将 Go 代码分组到一个位置的方法，这使得运行各种 Go 工具变得更加容易（正如在这些演讲中提到的那样: 来自 GopherCon EU 2018 的 "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=PTE4VJIdHPg",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Best Practices for Industrial Programming")]),r("OutboundLink")],1),e._v(" , "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=oL6JBUk6tj0",target:"_blank",rel:"noopener noreferrer"}},[e._v("GopherCon 2018: Kat Zien - How Do You Structure Your Go Apps"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"https://www.youtube.com/watch?v=3gQa1LWwuzk",target:"_blank",rel:"noopener noreferrer"}},[e._v("GoLab 2018 - Massimiliano Pippi - Project layout patterns in Go"),r("OutboundLink")],1),e._v(" ）。")]),e._v(" "),r("p",[e._v("如果你想查看哪个流行的 Go 存储库使用此项目布局模式，请查看 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/pkg/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/pkg")]),r("OutboundLink")],1),e._v(" 目录。这是一种常见的布局模式，但并不是所有人都接受它，一些 Go 社区的人也不推荐它。")]),e._v(" "),r("p",[e._v("如果你的应用程序项目真的很小，并且额外的嵌套并不能增加多少价值(除非你真的想要:-)，那就不要使用它。当它变得足够大时，你的根目录会变得非常繁琐时(尤其是当你有很多非 Go 应用组件时)，请考虑一下。")]),e._v(" "),r("h3",{attrs:{id:"vendor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vendor"}},[e._v("#")]),e._v(" "),r("code",[e._v("/vendor")])]),e._v(" "),r("p",[e._v("应用程序依赖项(手动管理或使用你喜欢的依赖项管理工具，如新的内置 "),r("a",{attrs:{href:"https://github.com/golang/go/wiki/Modules",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Go Modules")]),r("OutboundLink")],1),e._v(" 功能)。"),r("code",[e._v("go mod vendor")]),e._v(" 命令将为你创建 "),r("code",[e._v("/vendor")]),e._v(" 目录。请注意，如果未使用默认情况下处于启用状态的 Go 1.14，则可能需要在 "),r("code",[e._v("go build")]),e._v(" 命令中添加 "),r("code",[e._v("-mod=vendor")]),e._v(" 标志。")]),e._v(" "),r("p",[e._v("如果你正在构建一个库，那么不要提交你的应用程序依赖项。")]),e._v(" "),r("p",[e._v("注意，自从 "),r("a",{attrs:{href:"https://golang.org/doc/go1.13#modules",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("1.13")]),r("OutboundLink")],1),e._v(" 以后，Go 还启用了模块代理功能(默认使用 "),r("a",{attrs:{href:"https://proxy.golang.org/",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("https://proxy.golang.org")]),r("OutboundLink")],1),e._v(" 作为他们的模块代理服务器)。在"),r("a",{attrs:{href:"https://blog.golang.org/module-mirror-launch",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("here")]),r("OutboundLink")],1),e._v(" 阅读更多关于它的信息，看看它是否符合你的所有需求和约束。如果需要，那么你根本不需要 "),r("code",[e._v("vendor")]),e._v(" 目录。")]),e._v(" "),r("p",[e._v("国内模块代理功能默认是被墙的，七牛云有维护专门的的"),r("a",{attrs:{href:"https://github.com/goproxy/goproxy.cn/blob/master/README.zh-CN.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("模块代理")]),r("OutboundLink")],1),e._v(" 。")]),e._v(" "),r("h2",{attrs:{id:"服务应用程序目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务应用程序目录"}},[e._v("#")]),e._v(" 服务应用程序目录")]),e._v(" "),r("h3",{attrs:{id:"api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" "),r("code",[e._v("/api")])]),e._v(" "),r("p",[e._v("OpenAPI/Swagger 规范，JSON 模式文件，协议定义文件。")]),e._v(" "),r("p",[e._v("有关示例，请参见 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/api/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/api")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h2",{attrs:{id:"web-应用程序目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-应用程序目录"}},[e._v("#")]),e._v(" Web 应用程序目录")]),e._v(" "),r("h3",{attrs:{id:"web"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web"}},[e._v("#")]),e._v(" "),r("code",[e._v("/web")])]),e._v(" "),r("p",[e._v("特定于 Web 应用程序的组件:静态 Web 资产、服务器端模板和 SPAs。")]),e._v(" "),r("h2",{attrs:{id:"通用应用目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通用应用目录"}},[e._v("#")]),e._v(" 通用应用目录")]),e._v(" "),r("h3",{attrs:{id:"configs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configs"}},[e._v("#")]),e._v(" "),r("code",[e._v("/configs")])]),e._v(" "),r("p",[e._v("配置文件模板或默认配置。")]),e._v(" "),r("p",[e._v("将你的 "),r("code",[e._v("confd")]),e._v(" 或 "),r("code",[e._v("consul-template")]),e._v(" 模板文件放在这里。")]),e._v(" "),r("h3",{attrs:{id:"init"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[e._v("#")]),e._v(" "),r("code",[e._v("/init")])]),e._v(" "),r("p",[e._v("System init（systemd，upstart，sysv）和 process manager/supervisor（runit，supervisor）配置。")]),e._v(" "),r("h3",{attrs:{id:"scripts"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scripts"}},[e._v("#")]),e._v(" "),r("code",[e._v("/scripts")])]),e._v(" "),r("p",[e._v("执行各种构建、安装、分析等操作的脚本。")]),e._v(" "),r("p",[e._v("这些脚本保持了根级别的 Makefile 变得小而简单(例如， "),r("a",{attrs:{href:"https://github.com/hashicorp/terraform/blob/master/Makefile",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("https://github.com/hashicorp/terraform/blob/master/Makefile")]),r("OutboundLink")],1),e._v(" )。")]),e._v(" "),r("p",[e._v("有关示例，请参见  "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/scripts/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/scripts")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h3",{attrs:{id:"build"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[e._v("#")]),e._v(" "),r("code",[e._v("/build")])]),e._v(" "),r("p",[e._v("打包和持续集成。")]),e._v(" "),r("p",[e._v("将你的云( AMI )、容器( Docker )、操作系统( deb、rpm、pkg )包配置和脚本放在 "),r("code",[e._v("/build/package")]),e._v(" 目录下。")]),e._v(" "),r("p",[e._v("将你的 CI (travis、circle、drone)配置和脚本放在 "),r("code",[e._v("/build/ci")]),e._v(" 目录中。请注意，有些 CI 工具(例如 Travis CI)对配置文件的位置非常挑剔。尝试将配置文件放在 "),r("code",[e._v("/build/ci")]),e._v(" 目录中，将它们链接到 CI 工具期望它们的位置(如果可能的话)。")]),e._v(" "),r("h3",{attrs:{id:"deployments"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#deployments"}},[e._v("#")]),e._v(" "),r("code",[e._v("/deployments")])]),e._v(" "),r("p",[e._v("IaaS、PaaS、系统和容器编排部署配置和模板(docker-compose、kubernetes/helm、mesos、terraform、bosh)。注意，在一些存储库中(特别是使用 kubernetes 部署的应用程序)，这个目录被称为 "),r("code",[e._v("/deploy")]),e._v("。")]),e._v(" "),r("h3",{attrs:{id:"test"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[e._v("#")]),e._v(" "),r("code",[e._v("/test")])]),e._v(" "),r("p",[e._v("额外的外部测试应用程序和测试数据。你可以随时根据需求构造 "),r("code",[e._v("/test")]),e._v(" 目录。对于较大的项目，有一个数据子目录是有意义的。例如，你可以使用 "),r("code",[e._v("/test/data")]),e._v(" 或 "),r("code",[e._v("/test/testdata")]),e._v(" (如果你需要忽略目录中的内容)。请注意，Go 还会忽略以“.”或“_”开头的目录或文件，因此在如何命名测试数据目录方面有更大的灵活性。")]),e._v(" "),r("p",[e._v("有关示例，请参见 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/test/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/test")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h2",{attrs:{id:"其他目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他目录"}},[e._v("#")]),e._v(" 其他目录")]),e._v(" "),r("h3",{attrs:{id:"docs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docs"}},[e._v("#")]),e._v(" "),r("code",[e._v("/docs")])]),e._v(" "),r("p",[e._v("设计和用户文档(除了 godoc 生成的文档之外)。")]),e._v(" "),r("p",[e._v("有关示例，请参阅 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/docs/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/docs")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h3",{attrs:{id:"tools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[e._v("#")]),e._v(" "),r("code",[e._v("/tools")])]),e._v(" "),r("p",[e._v("这个项目的支持工具。注意，这些工具可以从 "),r("code",[e._v("/pkg")]),e._v(" 和 "),r("code",[e._v("/internal")]),e._v(" 目录导入代码。")]),e._v(" "),r("p",[e._v("有关示例，请参见 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/tools/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/tools")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h3",{attrs:{id:"examples"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" "),r("code",[e._v("/examples")])]),e._v(" "),r("p",[e._v("你的应用程序和/或公共库的示例。")]),e._v(" "),r("p",[e._v("有关示例，请参见 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/examples/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/examples")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h3",{attrs:{id:"third-party"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#third-party"}},[e._v("#")]),e._v(" "),r("code",[e._v("/third_party")])]),e._v(" "),r("p",[e._v("外部辅助工具，分叉代码和其他第三方工具(例如 Swagger UI)。")]),e._v(" "),r("h3",{attrs:{id:"githooks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#githooks"}},[e._v("#")]),e._v(" "),r("code",[e._v("/githooks")])]),e._v(" "),r("p",[e._v("Git hooks。")]),e._v(" "),r("h3",{attrs:{id:"assets"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#assets"}},[e._v("#")]),e._v(" "),r("code",[e._v("/assets")])]),e._v(" "),r("p",[e._v("与存储库一起使用的其他资产(图像、徽标等)。")]),e._v(" "),r("h3",{attrs:{id:"website"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#website"}},[e._v("#")]),e._v(" "),r("code",[e._v("/website")])]),e._v(" "),r("p",[e._v("如果你不使用 Github 页面，则在这里放置项目的网站数据。")]),e._v(" "),r("p",[e._v("有关示例，请参见 "),r("a",{attrs:{href:"https://github.com/golang-standards/project-layout/blob/master/website/README.md",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("/website")]),r("OutboundLink")],1),e._v(" 目录。")]),e._v(" "),r("h2",{attrs:{id:"你不应该拥有的目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#你不应该拥有的目录"}},[e._v("#")]),e._v(" 你不应该拥有的目录")]),e._v(" "),r("h3",{attrs:{id:"src"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#src"}},[e._v("#")]),e._v(" "),r("code",[e._v("/src")])]),e._v(" "),r("p",[e._v("有些 Go 项目确实有一个 "),r("code",[e._v("src")]),e._v(" 文件夹，但这通常发生在开发人员有 Java 背景，在那里它是一种常见的模式。如果可以的话，尽量不要采用这种 Java 模式。你真的不希望你的 Go 代码或 Go 项目看起来像 Java:-)")]),e._v(" "),r("p",[e._v("不要将项目级别 "),r("code",[e._v("src")]),e._v(" 目录与 Go 用于其工作空间的 "),r("code",[e._v("src")]),e._v(" 目录(如 "),r("a",{attrs:{href:"https://golang.org/doc/code.html",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("How to Write Go Code")]),r("OutboundLink")],1),e._v(" 中所述)混淆。"),r("code",[e._v("$GOPATH")]),e._v(" 环境变量指向你的(当前)工作空间(默认情况下，它指向非 windows 系统上的 "),r("code",[e._v("$HOME/go")]),e._v(")。这个工作空间包括顶层 "),r("code",[e._v("/pkg")]),e._v(", "),r("code",[e._v("/bin")]),e._v(" 和 "),r("code",[e._v("/src")]),e._v(" 目录。你的实际项目最终是 "),r("code",[e._v("/src")]),e._v(" 下的一个子目录，因此，如果你的项目中有 "),r("code",[e._v("/src")]),e._v(" 目录，那么项目路径将是这样的: "),r("code",[e._v("/some/path/to/workspace/src/your_project/src/your_code.go")]),e._v("。注意，在 Go 1.11 中，可以将项目放在 "),r("code",[e._v("GOPATH")]),e._v(" 之外，但这并不意味着使用这种布局模式是一个好主意。")]),e._v(" "),r("h2",{attrs:{id:"其他"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[e._v("#")]),e._v(" 其他")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("go mod init <module name>")]),e._v("：模块module初始化；")]),e._v(" "),r("li",[r("code",[e._v("go mod tidy")]),e._v("：处理依赖；")]),e._v(" "),r("li",[r("code",[e._v("go mod vendor")]),e._v("：依赖复制；")])])])}),[],!1,null,null,null);t.default=o.exports}}]);
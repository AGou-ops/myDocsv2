(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{781:function(s,a,n){"use strict";n.r(a);var t=n(6),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"docker-compose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker Compose")]),s._v(" "),n("h2",{attrs:{id:"docker-compose-简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-简介"}},[s._v("#")]),s._v(" Docker Compose 简介")]),s._v(" "),n("p",[s._v("Compose是用于定义和运行多容器Docker应用程序的工具。通过Compose，您可以使用YAML文件来配置应用程序的服务。然后，使用一个命令，就可以从配置中创建并启动所有服务。Compose可在所有环境中工作：生产，登台，开发，测试以及CI工作流。")]),s._v(" "),n("p",[s._v("使用Compose基本上是一个三步过程：")]),s._v(" "),n("ol",[n("li",[s._v("使用定义您的应用环境，"),n("code",[s._v("Dockerfile")]),s._v("以便可以在任何地方复制。")]),s._v(" "),n("li",[s._v("定义组成应用程序的服务，"),n("code",[s._v("docker-compose.yml")]),s._v(" 以便它们可以在隔离的环境中一起运行。")]),s._v(" "),n("li",[s._v("运行 "),n("code",[s._v("docker-compose up")]),s._v("启动并运行您的整个应用程序。")])]),s._v(" "),n("h2",{attrs:{id:"docker-compose-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-安装"}},[s._v("#")]),s._v(" Docker Compose 安装")]),s._v(" "),n("p",[s._v("运行以下命令以下载Docker Compose的当前稳定版本：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-'),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" -o /usr/local/bin/docker-compose\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("为其增加可执行权限：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("检查是否成功安装：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" --version\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" version "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.25")]),s._v(".5, build 1110ad01\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"docker-常用命令及组合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令及组合"}},[s._v("#")]),s._v(" Docker 常用命令及组合")]),s._v(" "),n("h3",{attrs:{id:"docker-compose相关命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose相关命令"}},[s._v("#")]),s._v(" docker-compose相关命令")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" build\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像，--no-cache表示不用缓存，否则在重新编辑Dockerfile后再build可能会直接使用缓存而导致新编辑内容不生效")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" build --no-cache\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# config 校验文件格式是否正确")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" -f docker-compose.yml config\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行服务")]),s._v("\nocker-compose up -d\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动/停止服务")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" start/stop 服务名\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止服务")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" down\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器日志")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs -f 容器ID\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" images\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" pull 镜像名\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"常用shell组合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用shell组合"}},[s._v("#")]),s._v(" 常用shell组合")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有容器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -q -a"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有标签为none的镜像")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $3}'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找容器IP地址")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect 容器名或ID "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IPAddress"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建网段, 名称: mynet, 分配两个容器在同一网段中 (这样子才可以互相通信)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create mynet\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d --net mynet --name container1 my_image\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it --net mynet --name container1 another_image\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("详细参考：[Docker Compose 命令与配置详解](Docker Compose 命令与配置详解)")]),s._v(" "),n("h2",{attrs:{id:"快速入门-compose-wordpress"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速入门-compose-wordpress"}},[s._v("#")]),s._v(" 快速入门 Compose & Wordpress")]),s._v(" "),n("p",[s._v("创建项目文件夹：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" my_wordpress/\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" my_wordpress/\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("创建"),n("code",[s._v("docker-compose.yml")]),s._v("文件：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("version: "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.3'")]),s._v("\n\nservices:\n   db:\n     image: mysql:5.7\n     volumes:\n       - db_data:/var/lib/mysql\n     restart: always\n     environment:\n       MYSQL_ROOT_PASSWORD: somewordpress\n       MYSQL_DATABASE: wordpress\n       MYSQL_USER: wordpress\n       MYSQL_PASSWORD: wordpress\n\n   wordpress:\n     depends_on:\n       - db\n     image: wordpress:latest\n     ports:\n       - "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8000:80"')]),s._v("\n     restart: always\n     environment:\n       WORDPRESS_DB_HOST: db:3306\n       WORDPRESS_DB_USER: wordpress\n       WORDPRESS_DB_PASSWORD: wordpress\n       WORDPRESS_DB_NAME: wordpress\nvolumes:\n    db_data: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("构建项目：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up -d\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("等待完成之后，打开浏览器访问 http://localhost:8000 即可.")]),s._v(" "),n("blockquote",[n("p",[s._v("该示例来源于官方文档：https://docs.docker.com/compose/wordpress/")])]),s._v(" "),n("h2",{attrs:{id:"docker-compose-命令与配置详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-命令与配置详解"}},[s._v("#")]),s._v(" Docker Compose 命令与配置详解")]),s._v(" "),n("h3",{attrs:{id:"常用命令参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令参数"}},[s._v("#")]),s._v(" 常用命令参数")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("build       Build or rebuild services "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("构建项目中的服务容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nbundle       Generate a Docker bundle from the Compose `"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("从Compose文件生成分布式应用程序包"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconfig       Validate and view the Compose "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("验证并查看Compose文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncreate       Create services "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("为服务创建容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ndown        Stop and remove containers, networks, images, and volumes "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("停止容器并删除由其创建的容器，网络，卷和图像up"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nevents       Receive real "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("events from containers "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("为项目中的每个容器流式传输容器事件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("        "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("Execute a "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("a running container "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("这相当于docker "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("。使用此子命令，您可以在服务中运行任意命令。默认情况下，命令分配TTY，因此您可以使用命令docker-compose "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("web sh来获取交互式提示。"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("        Get "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" on a "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("获得一个命令的帮助"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nimages       List images "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("        "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("Kill containers "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("通过发送SIGKILL信号来强制停止服务容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nlogs        View output from containers "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("查看服务容器的输出"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\npause       Pause services "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("暂停一个容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nport        Print the public port "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("a port binding "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("打印某个容器端口所映射的公共端口"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("         "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("List containers "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("列出项目中目前所有的容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\npull        Pull "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" images "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("拉取服务依赖镜像"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\npush        Push "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" images "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("推送服务镜像"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrestart      Restart services "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("重启项目中的服务"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("         "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("Remove stopped containers "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("删除所有停止状态的服务容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrun        Run a one-off "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("在指定服务上执行一个命令"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nscale       Set number of containers "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("a "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("设置指定服务执行的容器个数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nstart       Start services "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("启动已存在的服务容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nstop        Stop services "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("停止已存在的服务容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("        `Display the running processes "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("显示容器正在运行的进程"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nunpause      Unpause services "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("恢复处于暂停状态的容器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nup         Create and start containers "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("自动完成包括构建镜像、创建服务、启动服务并关联服务相关容器的一系列操作"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nversion      Show the Docker-Compose version information "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("输出版本"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("h3",{attrs:{id:"模板配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模板配置文件"}},[s._v("#")]),s._v(" 模板配置文件")]),s._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[s._v("Compose和Docker兼容性：\n    Compose 文件格式有3个版本"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("分别为1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 2.x 和 3.x\n    目前主流的为 3.x 其支持 docker 1.13.0 及其以上的版本\n \n \n常用参数：\n    version           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 compose 文件的版本")]),s._v("\n    services          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义所有的 service 信息, services 下面的第一级别的 key 既是一个 service 的名称")]),s._v("\n \n        build                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定包含构建上下文的路径, 或作为一个对象，该对象具有 context 和指定的 dockerfile 文件以及 args 参数值")]),s._v("\n            context               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# context: 指定 Dockerfile 文件所在的路径")]),s._v("\n            dockerfile            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dockerfile: 指定 context 指定的目录下面的 Dockerfile 的名称(默认为 Dockerfile)")]),s._v("\n            args                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# args: Dockerfile 在 build 过程中需要的参数 (等同于 docker container build --build-arg 的作用)")]),s._v("\n            cache_from            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.2中新增的参数, 指定缓存的镜像列表 (等同于 docker container build --cache_from 的作用)")]),s._v("\n            labels                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.3中新增的参数, 设置镜像的元数据 (等同于 docker container build --labels 的作用)")]),s._v("\n            shm_size              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.5中新增的参数, 设置容器 /dev/shm 分区的大小 (等同于 docker container build --shm-size 的作用)")]),s._v("\n \n        command               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 覆盖容器启动后默认执行的命令, 支持 shell 格式和 [] 格式")]),s._v("\n \n        configs               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不知道怎么用，哈哈。。")]),s._v("\n \n        cgroup_parent         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不知道怎么用")]),s._v("\n \n        container_name        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定容器的名称 (等同于 docker run --name 的作用)")]),s._v("\n \n        credential_spec       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不知道怎么用")]),s._v("\n \n        deploy                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3 版本以上, 指定与部署和运行服务相关的配置, deploy 部分是 docker stack 使用的, docker stack 依赖 docker swarm")]),s._v("\n            endpoint_mode         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.3 版本中新增的功能, 指定服务暴露的方式")]),s._v("\n                vip                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Docker 为该服务分配了一个虚拟 IP(VIP), 作为客户端的访问服务的地址")]),s._v("\n                dnsrr                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DNS轮询, Docker 为该服务设置 DNS 条目, 使得服务名称的 DNS 查询返回一个 IP 地址列表, 客户端直接访问其中的一个地址")]),s._v("\n            labels                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定服务的标签，这些标签仅在服务上设置")]),s._v("\n            mode                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 deploy 的模式")]),s._v("\n                global                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个集群节点都只有一个容器")]),s._v("\n                replicated            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用户可以指定集群中容器的数量(默认)")]),s._v("\n            placement             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不知道怎么用")]),s._v("\n            replicas              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# deploy 的 mode 为 replicated 时, 指定容器副本的数量")]),s._v("\n            resources             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 资源限制")]),s._v("\n                limits                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置容器的资源限制")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.5"')]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置该容器最多只能使用 50% 的 CPU")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 50M           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置该容器最多只能使用 50M 的内存空间")]),s._v("\n                reservations          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置为容器预留的系统资源(随时可用)")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.2"')]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为该容器保留 20% 的 CPU")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 20M           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为该容器保留 20M 的内存空间")]),s._v("\n            restart_policy        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义容器重启策略, 用于代替 restart 参数")]),s._v("\n                condition             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义容器重启策略(接受三个参数)")]),s._v("\n                    none                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不尝试重启")]),s._v("\n                    on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("failure            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只有当容器内部应用程序出现问题才会重启")]),s._v("\n                    any                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 无论如何都会尝试重启(默认)")]),s._v("\n                delay                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 尝试重启的间隔时间(默认为 0s)")]),s._v("\n                max_attempts          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 尝试重启次数(默认一直尝试重启)")]),s._v("\n                window                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查重启是否成功之前的等待时间(即如果容器启动了, 隔多少秒之后去检测容器是否正常, 默认 0s)")]),s._v("\n            update_config         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于配置滚动更新配置")]),s._v("\n                parallelism           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一次性更新的容器数量")]),s._v("\n                delay                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新一组容器之间的间隔时间")]),s._v("\n                failure_action        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义更新失败的策略")]),s._v("\n                    continue              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 继续更新")]),s._v("\n                    rollback              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚更新")]),s._v("\n                    pause                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂停更新(默认)")]),s._v("\n                monitor               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次更新后的持续时间以监视更新是否失败(单位: ns|us|ms|s|m|h) (默认为0)")]),s._v("\n                max_failure_ratio     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚期间容忍的失败率(默认值为0)")]),s._v("\n                order                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.4 版本中新增的参数, 回滚期间的操作顺序")]),s._v("\n                    stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("first            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#旧任务在启动新任务之前停止(默认)")]),s._v("\n                    start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("first           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#首先启动新任务, 并且正在运行的任务暂时重叠")]),s._v("\n            rollback_config       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.7 版本中新增的参数, 用于定义在 update_config 更新失败的回滚策略")]),s._v("\n                parallelism           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一次回滚的容器数, 如果设置为0, 则所有容器同时回滚")]),s._v("\n                delay                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个组回滚之间的时间间隔(默认为0)")]),s._v("\n                failure_action        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义回滚失败的策略")]),s._v("\n                    continue              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 继续回滚")]),s._v("\n                    pause                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂停回滚")]),s._v("\n                monitor               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次回滚任务后的持续时间以监视失败(单位: ns|us|ms|s|m|h) (默认为0)")]),s._v("\n                max_failure_ratio     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚期间容忍的失败率(默认值0)")]),s._v("\n                order                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚期间的操作顺序")]),s._v("\n                    stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("first            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 旧任务在启动新任务之前停止(默认)")]),s._v("\n                    start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("first           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先启动新任务, 并且正在运行的任务暂时重叠")]),s._v("\n               \n* 注意：支持 docker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("compose up 和 docker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("compose run 但不支持 docker stack deploy 的子选项security_opt  container_name  devices  tmpfs  stop_signal  links    cgroup_parent etwork_mode  external_links  restart  build  userns_mode  sysctls\n \n        devices               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定设备映射列表 (等同于 docker run --device 的作用)")]),s._v("\n \n        depends_on            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义容器启动顺序 (此选项解决了容器之间的依赖关系， 此选项在 v3 版本中 使用 swarm 部署时将忽略该选项)")]),s._v("\n            \n        dns                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 DNS 地址(等同于 docker run --dns 的作用)")]),s._v("\n \n        dns_search            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 DNS 搜索域(等同于 docker run --dns-search 的作用)")]),s._v("\n \n        tmpfs                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v2 版本以上, 挂载目录到容器中, 作为容器的临时文件系统(等同于 docker run --tmpfs 的作用, 在使用 swarm 部署时将忽略该选项)")]),s._v("\n \n        entrypoint            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 覆盖容器的默认 entrypoint 指令 (等同于 docker run --entrypoint 的作用)")]),s._v("\n \n        env_file              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从指定文件中读取变量设置为容器中的环境变量, 可以是单个值或者一个文件列表, 如果多个文件中的变量重名则后面的变量覆盖前面的变量, environment 的值覆盖 env_file 的值")]),s._v("\n            文件格式：\n                RACK_ENV=development\n \n        environment           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置环境变量， environment 的值可以覆盖 env_file 的值 (等同于 docker run --env 的作用)")]),s._v("\n \n        expose                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暴露端口, 但是不能和宿主机建立映射关系, 类似于 Dockerfile 的 EXPOSE 指令")]),s._v("\n \n        external_links        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连接不在 docker-compose.yml 中定义的容器或者不在 compose 管理的容器(docker run 启动的容器, 在 v3 版本中使用 swarm 部署时将忽略该选项)")]),s._v("\n \n        extra_hosts           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加 host 记录到容器中的 /etc/hosts 中 (等同于 docker run --add-host 的作用)")]),s._v("\n \n        healthcheck           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v2.1 以上版本, 定义容器健康状态检查, 类似于 Dockerfile 的 HEALTHCHECK 指令")]),s._v("\n            test                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查容器检查状态的命令, 该选项必须是一个字符串或者列表, 第一项必须是 NONE, CMD 或 CMD-SHELL, 如果其是一个字符串则相当于 CMD-SHELL 加该字符串")]),s._v("\n                NONE                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 禁用容器的健康状态检测")]),s._v("\n                CMD                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# test: ["CMD", "curl", "-f", "http://localhost"]')]),s._v("\n                CMD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("SHELL             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# test: ["CMD-SHELL", "curl -f http://localhost || exit 1"] 或者　test: curl -f https://localhost || exit 1')]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("interval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1m30s       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次检查之间的间隔时间")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10s          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行命令的超时时间")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("retries")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重试次数")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("start_period")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 40s     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.4 以上新增的选项, 定义容器启动时间间隔")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("disable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# true 或 false, 表示是否禁用健康状态检测和　test: NONE 相同")]),s._v("\n         \n        image                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 docker 镜像, 可以是远程仓库镜像、本地镜像")]),s._v("\n \n        init                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.7 中新增的参数, true 或 false 表示是否在容器中运行一个 init, 它接收信号并传递给进程")]),s._v("\n \n        isolation             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 隔离容器技术, 在 Linux 中仅支持 default 值")]),s._v("\n \n        labels                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 Docker 标签将元数据添加到容器, 与 Dockerfile 中的 LABELS 类似")]),s._v("\n \n        links                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 链接到其它服务中的容器, 该选项是 docker 历史遗留的选项, 目前已被用户自定义网络名称空间取代, 最终有可能被废弃 (在使用 swarm 部署时将忽略该选项)")]),s._v("\n         \n        logging               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置容器日志服务")]),s._v("\n            driver                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定日志记录驱动程序, 默认 json-file (等同于 docker run --log-driver 的作用)")]),s._v("\n            options               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定日志的相关参数 (等同于 docker run --log-opt 的作用)")]),s._v("\n                max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("size              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置单个日志文件的大小, 当到达这个值后会进行日志滚动操作")]),s._v("\n                max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("file              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志文件保留的数量")]),s._v("\n \n        network_mode          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定网络模式 (等同于 docker run --net 的作用, 在使用 swarm 部署时将忽略该选项)        ")]),s._v("\n \n        networks              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将容器加入指定网络 (等同于 docker network connect 的作用), networks 可以位于 compose 文件顶级键和 services 键的二级键")]),s._v("\n            aliases               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同一网络上的容器可以使用服务名称或别名连接到其中一个服务的容器")]),s._v("\n            ipv4_address      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IP V4 格式")]),s._v("\n            ipv6_address      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IP V6 格式")]),s._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'host'")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 共享宿主机的 进程空间(PID)")]),s._v("\n \n        ports                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 建立宿主机和容器之间的端口映射关系, ports 支持两种语法格式")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("SHORT 语法格式示例")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3000"')]),s._v("                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暴露容器的 3000 端口, 宿主机的端口由 docker 随机映射一个没有被占用的端口")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3000-3005"')]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暴露容器的 3000 到 3005 端口, 宿主机的端口由 docker 随机映射没有被占用的端口")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8000:8000"')]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器的 8000 端口和宿主机的 8000 端口建立映射关系")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"9090-9091:8080-8081"')]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1:8001:8001"')]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定映射宿主机的指定地址的")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1:5000-5010:5000-5010"')]),s._v("  \n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6060:6060/udp"')]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定协议")]),s._v("\n \n            LONG 语法格式示例"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("(v3.2 新增的语法格式)\n                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器端口")]),s._v("\n                      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("published")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机端口")]),s._v("\n                      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" tcp                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 协议类型")]),s._v("\n                      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" host                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# host 在每个节点上发布主机端口,  ingress 对于群模式端口进行负载均衡")]),s._v("\n \n        secrets               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不知道怎么用")]),s._v("\n \n        security_opt          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为每个容器覆盖默认的标签 (在使用 swarm 部署时将忽略该选项)")]),s._v("\n \n        stop_grace_period     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定在发送了 SIGTERM 信号之后, 容器等待多少秒之后退出(默认 10s)")]),s._v("\n \n        stop_signal           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定停止容器发送的信号 (默认为 SIGTERM 相当于 kill PID; SIGKILL 相当于 kill -9 PID; 在使用 swarm 部署时将忽略该选项)")]),s._v("\n \n        sysctls               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置容器中的内核参数 (在使用 swarm 部署时将忽略该选项)")]),s._v("\n \n        ulimits               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置容器的 limit")]),s._v("\n \n        userns_mode           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果Docker守护程序配置了用户名称空间, 则禁用此服务的用户名称空间 (在使用 swarm 部署时将忽略该选项)")]),s._v("\n \n        volumes               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义容器和宿主机的卷映射关系, 其和 networks 一样可以位于 services 键的二级键和 compose 顶级键, 如果需要跨服务间使用则在顶级键定义, 在 services 中引用")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("SHORT 语法格式示例")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /var/lib/mysql                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射容器内的 /var/lib/mysql 到宿主机的一个随机目录中")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /opt/data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射容器内的 /var/lib/mysql 到宿主机的 /opt/data")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/tmp/cache            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射容器内的 /var/lib/mysql 到宿主机 compose 文件所在的位置")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ~/configs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/configs/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ro    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射容器宿主机的目录到容器中去, 权限只读")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" datavolume"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# datavolume 为 volumes 顶级键定义的目录, 在此处直接调用")]),s._v("\n             \n            LONG 语法格式示例"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("(v3.2 新增的语法格式)\n                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.2"')]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("alpine\n                        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"80:80"')]),s._v("\n                        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" volume                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mount 的类型, 必须是 bind、volume 或 tmpfs")]),s._v("\n                                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("source")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mydata              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机目录")]),s._v("\n                                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /data               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器目录")]),s._v("\n                                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volume")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置额外的选项, 其 key 必须和 type 的值相同")]),s._v("\n                                    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nocopy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volume 额外的选项, 在创建卷时禁用从容器复制数据")]),s._v("\n                            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bind                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volume 模式只指定容器路径即可, 宿主机路径随机生成; bind 需要指定容器和数据机的映射路径")]),s._v("\n                                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("source")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./static\n                                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /opt/app/static\n                                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("read_only")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置文件系统为只读文件系统")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mydata")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义在 volume, 可在所有服务中调用")]),s._v("\n                 \n        restart               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义容器重启策略(在使用 swarm 部署时将忽略该选项, 在 swarm 使用 restart_policy 代替 restart)")]),s._v("\n            no                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 禁止自动重启容器(默认)")]),s._v("\n            always                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 无论如何容器都会重启")]),s._v("\n            on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("failure            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当出现 on-failure 报错时, 容器重新启动")]),s._v("\n \n        其他选项：\n            domainname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hostname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ipc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mac_address"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" privileged"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" read_only"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shm_size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stdin_open"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" working_dir\n            上面这些选项都只接受单个值和 docker run 的对应参数类似\n \n        对于值为时间的可接受的值：\n            2.5s\n            10s\n            1m30s\n            2h32m\n            5h34m56s\n \n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("时间单位")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" us"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" m， h\n \n        对于值为大小的可接受的值：\n            2b\n            1024kb\n            2048k\n            300m\n            1gb\n \n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("单位")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" g 或者 kb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" gb\n \n \n \n \n \n    networks          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义 networks 信息")]),s._v("\n        driver                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定网络模式, 大多数情况下, 它 bridge 于单个主机和 overlay Swarm 上")]),s._v("\n            bridge                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Docker 默认使用 bridge 连接单个主机上的网络")]),s._v("\n            overlay               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# overlay 驱动程序创建一个跨多个节点命名的网络")]),s._v("\n            host                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 共享主机网络名称空间(等同于 docker run --net=host)")]),s._v("\n            none                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等同于 docker run --net=none")]),s._v("\n \n        driver_opts           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.2以上版本, 传递给驱动程序的参数, 这些参数取决于驱动程序")]),s._v("\n \n        attachable            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# driver 为 overlay 时使用, 如果设置为 true 则除了服务之外，独立容器也可以附加到该网络; 如果独立容器连接到该网络，则它可以与其他 Docker 守护进程连接到的该网络的服务和独立容器进行通信")]),s._v("\n \n        ipam                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自定义 IPAM 配置. 这是一个具有多个属性的对象, 每个属性都是可选的")]),s._v("\n            driver                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IPAM 驱动程序, bridge 或者 default")]),s._v("\n            config                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置项")]),s._v("\n                subnet                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CIDR格式的子网，表示该网络的网段")]),s._v("\n         \n        external              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 外部网络, 如果设置为 true 则 docker-compose up 不会尝试创建它, 如果它不存在则引发错误")]),s._v("\n \n        name                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v3.5 以上版本, 为此网络设置名称")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("228")]),n("br"),n("span",{staticClass:"line-number"},[s._v("229")]),n("br"),n("span",{staticClass:"line-number"},[s._v("230")]),n("br"),n("span",{staticClass:"line-number"},[s._v("231")]),n("br"),n("span",{staticClass:"line-number"},[s._v("232")]),n("br"),n("span",{staticClass:"line-number"},[s._v("233")]),n("br"),n("span",{staticClass:"line-number"},[s._v("234")]),n("br"),n("span",{staticClass:"line-number"},[s._v("235")]),n("br"),n("span",{staticClass:"line-number"},[s._v("236")]),n("br"),n("span",{staticClass:"line-number"},[s._v("237")]),n("br"),n("span",{staticClass:"line-number"},[s._v("238")]),n("br"),n("span",{staticClass:"line-number"},[s._v("239")]),n("br"),n("span",{staticClass:"line-number"},[s._v("240")]),n("br"),n("span",{staticClass:"line-number"},[s._v("241")]),n("br"),n("span",{staticClass:"line-number"},[s._v("242")]),n("br"),n("span",{staticClass:"line-number"},[s._v("243")]),n("br"),n("span",{staticClass:"line-number"},[s._v("244")]),n("br"),n("span",{staticClass:"line-number"},[s._v("245")]),n("br"),n("span",{staticClass:"line-number"},[s._v("246")]),n("br"),n("span",{staticClass:"line-number"},[s._v("247")]),n("br"),n("span",{staticClass:"line-number"},[s._v("248")]),n("br")])]),n("h2",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[s._v("示例：\ndocker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("compose up 以依赖顺序启动服务，下面例子中 redis 和 db 服务在 web 启动前启动\n默认情况下使用 docker"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("compose up web 这样的方式启动 web 服务时，也会启动 redis 和 db 两个服务，因为在配置文件中定义了依赖关系\n\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" db     \n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis \n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("db")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" postgres                            \n \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("示例")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.7'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.14"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("alpine\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mynginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ifconfig\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app_net")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调用下面 networks 定义的 app_net 网络")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ipv4_address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.16.238.10\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app_net")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bridge\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ipam")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("config")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("subnet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.16.238.0/24\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[s._v("文件格式示例：\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("alpine\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6379"')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" frontend\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("deploy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("update_config")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("parallelism")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("delay")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10s\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart_policy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("condition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("failure\n\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("db")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" postgres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.4")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/postgresql/data\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" backend\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("deploy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("placement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("constraints")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("node.role == manager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h2",{attrs:{id:"参考链接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),n("ul",[n("li",[s._v("Docker Compose Documentation：https://docs.docker.com/compose/")]),s._v(" "),n("li",[s._v("compose-file：https://docs.docker.com/compose/compose-file/#compose-file-structure-and-examples")]),s._v(" "),n("li",[s._v("cnblogs @zhujingzhi ：https://www.cnblogs.com/zhujingzhi/p/9786622.html")])])])}),[],!1,null,null,null);a.default=e.exports}}]);